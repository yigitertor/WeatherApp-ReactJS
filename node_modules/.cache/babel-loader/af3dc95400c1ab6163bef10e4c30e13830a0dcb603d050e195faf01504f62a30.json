{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\modules\\\\WeatherInfoComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { WeatherIcons } from \"../App\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport ForecastComponent from \"./ForecastComponent\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = \"Y8297725875f39e37ed6a7bc2e1fc738c\"; // Replace with your OpenWeatherMap API key\nconst city = {\n  city\n}; // Replace with the name of your city\nconst apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;\nexport const WeatherInfoIcons = {\n  Sunset: \"/icons/temp.svg\",\n  Sunrise: \"/icons/temp.svg\",\n  Humidity: \"/icons/humidity.svg\",\n  Wind: \"/icons/wind.svg\",\n  Pressure: \"/icons/pressure.svg\",\n  Thermal_Sensation: \"/icons/thermometer.svg\"\n};\nconst Location = styled.span`\n  margin: 10px auto;\n  text-transform: capitalize;\n  font-size: 28px;\n  font-weight: bold;\n  color: White;\n`;\n_c = Location;\nconst Condition = styled.span`\n  margin: 20px auto;\n  text-transform: capitalize;\n  font-size: 14px;\n  color: #ffffff;\n\n  & span {\n    width: 97px;\n    height: 58px;\n\n    font-family: \"Nunito\";\n    font-style: normal;\n    font-weight: 800;\n    font-size: 48px;\n    line-height: 120%;\n\n    display: flex;\n    align-items: center;\n    text-align: right;\n    color: #ffffff;\n  }\n`;\n_c2 = Condition;\nconst WeatherIcon = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 5px auto;\n`;\n_c3 = WeatherIcon;\nconst WeatherContainer = styled.div.attrs(props => ({\n  style: {\n    backgroundImage: ((_props$weather, _props$weather2) => {\n      const isDay = isDaytime((_props$weather = props.weather) === null || _props$weather === void 0 ? void 0 : _props$weather.weather[0].icon);\n      const weatherCondition = (_props$weather2 = props.weather) === null || _props$weather2 === void 0 ? void 0 : _props$weather2.weather[0].main;\n      let imageUrl;\n      if (isDay) {\n        imageUrl = getDaytimeImage(weatherCondition);\n      } else {\n        imageUrl = getNighttimeImage(weatherCondition);\n      }\n      return `url('${imageUrl}')`;\n    })()\n  }\n}))`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 10px;\n`;\n\n// Saatin gündüz veya gece olup olmadığını kontrol et\n_c4 = WeatherContainer;\nconst isDaytime = icon => {\n  const hour = new Date().getHours();\n  return hour >= 6 && hour < 18;\n};\n\n// Gece için arka plan resmi\nconst getNighttimeImage = weatherCondition => {\n  switch (weatherCondition) {\n    case \"Clear\":\n      return \"https://pics.craiyon.com/2023-11-16/BjUZcXlZRQWOWgYFMXELWw.webp\";\n    case \"Clouds\":\n      return \"https://img.freepik.com/premium-vector/night-sky-background-with-clouds-stars_116220-98.jpg\";\n    case \"Rain\":\n      return \"https://pics.craiyon.com/2023-11-29/lythZKvRTQqaSHjk21ABXA.webp\";\n    default:\n      return \"https://pics.craiyon.com/2023-11-16/BjUZcXlZRQWOWgYFMXELWw.webp\";\n  }\n};\n\n// Gündüz için arka plan resmi\nconst getDaytimeImage = weatherCondition => {\n  switch (weatherCondition) {\n    case \"Clear\":\n      return \"https://img.freepik.com/free-vector/sky-background-video-conferencing_23-2148630092.jpg?t=st=1713552459~exp=1713556059~hmac=85ab85d23c68d05e032249590e7f65342ba107f0c258b761df18d17b86ede757&w=900\";\n    case \"Clouds\":\n      return \"https://www.shutterstock.com/image-photo/dramatic-black-cloud-before-rainy-260nw-549197416.jpg\";\n    case \"Rain\":\n      return \"https://cdn.girls.buzz/images/girls.buzz.max-1440x900.webp\";\n    default:\n      return \"https://upload.wikimedia.org/wikipedia/commons/0/07/Clear_Sky.jpg\";\n  }\n};\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 4px 16px;\n  gap: 8px;\n  height: 292px;\n`;\n_c5 = WeatherInfoContainer;\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  gap: 24px;\n\n  width: 327px;\n  height: 56px;\n  border-bottom: 1px solid #1c1c27;\n  background: #16161f;\n  border-radius: 12px;\n`;\n_c6 = InfoContainer;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\n_c7 = InfoIcon;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  gap: 24px;\n\n  width: 327px;\n  height: 56px;\n  color: #fafafa;\n  & span {\n    //styleName: Heading xs;\n    font-family: Nunito;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 19.6px;\n    text-align: center;\n    color: #bfbfd4;\n  }\n`;\n_c8 = InfoLabel;\nconst WeatherInfoComponent = props => {\n  const {\n    name,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(InfoContainer, {\n    children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n      src: WeatherInfoIcons[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoLabel, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_c9 = WeatherInfoComponent;\nconst BackButton = styled.span`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n  color: white;\n  background-color: #7692c9;\n  padding: 5px 10px;\n  border-radius: 5px;\n`;\n_c10 = BackButton;\nconst ForecastButton = styled.button`\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  cursor: pointer;\n  overflow-y: auto;\n  top: calc(35%);\n  left: 42%;\n  transform: translateX(-50%);\n  font-family: Nunito;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n  background-color: #7692c9;\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n\n  @media screen and (max-width: 768px) {\n    left: 30%;\n  }\n`;\n_c11 = ForecastButton;\nconst CurrentWeatherLabel = styled.span`\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  width: 208px;\n  max-height: 200px;\n  overflow-y: auto;\n  top: calc(7%);\n  left: 46%;\n  transform: translateX(-50%);\n  font-family: Nunito;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`;\n_c12 = CurrentWeatherLabel;\nconst WeatherComponent = () => {\n  _s();\n  var _weather$weather$0$ic;\n  const [weather, setWeather] = useState(null);\n  const [showForecast, setShowForecast] = useState(false);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n        const data = await response.json();\n        setWeather(data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n    fetchWeather();\n  }, []);\n  const toggleForecast = () => {\n    setShowForecast(!showForecast);\n  };\n  const isDay = weather === null || weather === void 0 ? void 0 : (_weather$weather$0$ic = weather.weather[0].icon) === null || _weather$weather$0$ic === void 0 ? void 0 : _weather$weather$0$ic.includes(\"d\");\n  const getTime = timeStamp => {\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [weather && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CurrentWeatherLabel, {\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WeatherContainer, {\n        weather: weather,\n        children: [/*#__PURE__*/_jsxDEV(Condition, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${Math.floor(weather.main.temp - 273)}°C`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), `  |  ${weather.weather[0].description}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n          src: WeatherIcons[weather.weather[0].icon]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BackButton, {\n          onClick: onBackButtonClick,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faArrowLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ForecastButton, {\n          onClick: toggleForecast,\n          children: \"Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        children: `${weather.name}, ${weather.sys.country}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: \"Thermal_Sensation\",\n          value: `${Math.floor(weather.main.feels_like - 273)}°C`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: isDay ? \"Sunset\" : \"Sunrise\",\n          value: `${getTime(weather.sys[isDay ? \"sunset\" : \"sunrise\"])}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: \"Humidity\",\n          value: weather.main.humidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: \"Wind\",\n          value: weather.wind.speed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: \"Pressure\",\n          value: weather.main.pressure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: onBackButtonClick,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ForecastComponent, {\n      show: showForecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherComponent, \"FBEdtU3Rl3hVnmJHzajkIocN4z4=\");\n_c13 = WeatherComponent;\nexport default WeatherComponent;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Location\");\n$RefreshReg$(_c2, \"Condition\");\n$RefreshReg$(_c3, \"WeatherIcon\");\n$RefreshReg$(_c4, \"WeatherContainer\");\n$RefreshReg$(_c5, \"WeatherInfoContainer\");\n$RefreshReg$(_c6, \"InfoContainer\");\n$RefreshReg$(_c7, \"InfoIcon\");\n$RefreshReg$(_c8, \"InfoLabel\");\n$RefreshReg$(_c9, \"WeatherInfoComponent\");\n$RefreshReg$(_c10, \"BackButton\");\n$RefreshReg$(_c11, \"ForecastButton\");\n$RefreshReg$(_c12, \"CurrentWeatherLabel\");\n$RefreshReg$(_c13, \"WeatherComponent\");","map":{"version":3,"names":["React","useState","useEffect","styled","WeatherIcons","FontAwesomeIcon","faArrowLeft","ForecastComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","city","apiUrl","WeatherInfoIcons","Sunset","Sunrise","Humidity","Wind","Pressure","Thermal_Sensation","Location","span","_c","Condition","_c2","WeatherIcon","img","_c3","WeatherContainer","div","attrs","props","style","backgroundImage","_props$weather","_props$weather2","isDay","isDaytime","weather","icon","weatherCondition","main","imageUrl","getDaytimeImage","getNighttimeImage","_c4","hour","Date","getHours","WeatherInfoContainer","_c5","InfoContainer","_c6","InfoIcon","_c7","InfoLabel","_c8","WeatherInfoComponent","name","value","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c9","BackButton","_c10","ForecastButton","button","_c11","CurrentWeatherLabel","_c12","WeatherComponent","_s","_weather$weather$0$ic","setWeather","showForecast","setShowForecast","fetchWeather","response","fetch","ok","Error","data","json","error","console","toggleForecast","includes","getTime","timeStamp","getMinutes","Math","floor","temp","description","onClick","onBackButtonClick","sys","country","feels_like","humidity","wind","speed","pressure","show","_c13","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masaüstü/Doc/Projeler/WeatherApp-ReactJS/src/modules/WeatherInfoComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { WeatherIcons } from \"../App\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ForecastComponent from \"./ForecastComponent\";\r\n\r\nconst apiKey = \"Y8297725875f39e37ed6a7bc2e1fc738c\"; // Replace with your OpenWeatherMap API key\r\nconst city = { city }; // Replace with the name of your city\r\nconst apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;\r\n\r\nexport const WeatherInfoIcons = {\r\n  Sunset: \"/icons/temp.svg\",\r\n  Sunrise: \"/icons/temp.svg\",\r\n  Humidity: \"/icons/humidity.svg\",\r\n  Wind: \"/icons/wind.svg\",\r\n  Pressure: \"/icons/pressure.svg\",\r\n  Thermal_Sensation: \"/icons/thermometer.svg\",\r\n};\r\nconst Location = styled.span`\r\n  margin: 10px auto;\r\n  text-transform: capitalize;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: White;\r\n`;\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  text-transform: capitalize;\r\n  font-size: 14px;\r\n  color: #ffffff;\r\n\r\n  & span {\r\n    width: 97px;\r\n    height: 58px;\r\n\r\n    font-family: \"Nunito\";\r\n    font-style: normal;\r\n    font-weight: 800;\r\n    font-size: 48px;\r\n    line-height: 120%;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: right;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst WeatherContainer = styled.div.attrs((props) => ({\r\n  style: {\r\n    backgroundImage: (() => {\r\n      const isDay = isDaytime(props.weather?.weather[0].icon);\r\n      const weatherCondition = props.weather?.weather[0].main;\r\n      let imageUrl;\r\n\r\n      if (isDay) {\r\n        imageUrl = getDaytimeImage(weatherCondition);\r\n      } else {\r\n        imageUrl = getNighttimeImage(weatherCondition);\r\n      }\r\n\r\n      return `url('${imageUrl}')`;\r\n    })(),\r\n  },\r\n}))`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 10px;\r\n`;\r\n\r\n// Saatin gündüz veya gece olup olmadığını kontrol et\r\nconst isDaytime = (icon) => {\r\n  const hour = new Date().getHours();\r\n  return hour >= 6 && hour < 18;\r\n};\r\n\r\n// Gece için arka plan resmi\r\nconst getNighttimeImage = (weatherCondition) => {\r\n  switch (weatherCondition) {\r\n    case \"Clear\":\r\n      return \"https://pics.craiyon.com/2023-11-16/BjUZcXlZRQWOWgYFMXELWw.webp\";\r\n    case \"Clouds\":\r\n      return \"https://img.freepik.com/premium-vector/night-sky-background-with-clouds-stars_116220-98.jpg\";\r\n    case \"Rain\":\r\n      return \"https://pics.craiyon.com/2023-11-29/lythZKvRTQqaSHjk21ABXA.webp\";\r\n    default:\r\n      return \"https://pics.craiyon.com/2023-11-16/BjUZcXlZRQWOWgYFMXELWw.webp\";\r\n  }\r\n};\r\n\r\n// Gündüz için arka plan resmi\r\nconst getDaytimeImage = (weatherCondition) => {\r\n  switch (weatherCondition) {\r\n    case \"Clear\":\r\n      return \"https://img.freepik.com/free-vector/sky-background-video-conferencing_23-2148630092.jpg?t=st=1713552459~exp=1713556059~hmac=85ab85d23c68d05e032249590e7f65342ba107f0c258b761df18d17b86ede757&w=900\";\r\n    case \"Clouds\":\r\n      return \"https://www.shutterstock.com/image-photo/dramatic-black-cloud-before-rainy-260nw-549197416.jpg\";\r\n    case \"Rain\":\r\n      return \"https://cdn.girls.buzz/images/girls.buzz.max-1440x900.webp\";\r\n    default:\r\n      return \"https://upload.wikimedia.org/wikipedia/commons/0/07/Clear_Sky.jpg\";\r\n  }\r\n};\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 4px 16px;\r\n  gap: 8px;\r\n  height: 292px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 24px;\r\n\r\n  width: 327px;\r\n  height: 56px;\r\n  border-bottom: 1px solid #1c1c27;\r\n  background: #16161f;\r\n  border-radius: 12px;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  gap: 24px;\r\n\r\n  width: 327px;\r\n  height: 56px;\r\n  color: #fafafa;\r\n  & span {\r\n    //styleName: Heading xs;\r\n    font-family: Nunito;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 19.6px;\r\n    text-align: center;\r\n    color: #bfbfd4;\r\n  }\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n  const { name, value } = props;\r\n  return (\r\n    <InfoContainer>\r\n      <InfoIcon src={WeatherInfoIcons[name]} />\r\n      <InfoLabel>\r\n        <span>{name}</span>\r\n        {value}\r\n      </InfoLabel>\r\n    </InfoContainer>\r\n  );\r\n};\r\n\r\nconst BackButton = styled.span`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  cursor: pointer;\r\n  color: white;\r\n  background-color: #7692c9;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst ForecastButton = styled.button`\r\n  padding: 0;\r\n  margin: 0;\r\n  position: absolute;\r\n  cursor: pointer;\r\n  overflow-y: auto;\r\n  top: calc(35%);\r\n  left: 42%;\r\n  transform: translateX(-50%);\r\n  font-family: Nunito;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: white;\r\n  background-color: #7692c9;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: none;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    left: 30%;\r\n  }\r\n`;\r\n\r\nconst CurrentWeatherLabel = styled.span`\r\n  padding: 0;\r\n  margin: 0;\r\n  position: absolute;\r\n  width: 208px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  top: calc(7%);\r\n  left: 46%;\r\n  transform: translateX(-50%);\r\n  font-family: Nunito;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: white;\r\n`;\r\n\r\nconst WeatherComponent = () => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [showForecast, setShowForecast] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch weather data\");\r\n        }\r\n        const data = await response.json();\r\n        setWeather(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching weather data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchWeather();\r\n  }, []);\r\n\r\n  const toggleForecast = () => {\r\n    setShowForecast(!showForecast);\r\n  };\r\n\r\n  const isDay = weather?.weather[0].icon?.includes(\"d\");\r\n  const getTime = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(\r\n      timeStamp * 1000\r\n    ).getMinutes()}`;\r\n  };\r\n  return (\r\n    <>\r\n      {weather && (\r\n        <>\r\n          <CurrentWeatherLabel>Current Weather</CurrentWeatherLabel>\r\n          <WeatherContainer weather={weather}>\r\n            <Condition>\r\n              <span>{`${Math.floor(weather.main.temp - 273)}°C`}</span>\r\n              {`  |  ${weather.weather[0].description}`}\r\n            </Condition>\r\n            <WeatherIcon src={WeatherIcons[weather.weather[0].icon]} />\r\n            <BackButton onClick={onBackButtonClick}>\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </BackButton>\r\n            <ForecastButton onClick={toggleForecast}>Forecast</ForecastButton>\r\n          </WeatherContainer>\r\n          <Location>{`${weather.name}, ${weather.sys.country}`}</Location>\r\n\r\n          <WeatherInfoContainer>\r\n            <WeatherInfoComponent\r\n              name={\"Thermal_Sensation\"}\r\n              value={`${Math.floor(weather.main.feels_like - 273)}°C`}\r\n            />\r\n            <WeatherInfoComponent\r\n              name={isDay ? \"Sunset\" : \"Sunrise\"}\r\n              value={`${getTime(weather.sys[isDay ? \"sunset\" : \"sunrise\"])}`}\r\n            />\r\n            <WeatherInfoComponent\r\n              name={\"Humidity\"}\r\n              value={weather.main.humidity}\r\n            />\r\n            <WeatherInfoComponent name={\"Wind\"} value={weather.wind.speed} />\r\n            <WeatherInfoComponent\r\n              name={\"Pressure\"}\r\n              value={weather.main.pressure}\r\n            />\r\n          </WeatherInfoContainer>\r\n          <BackButton onClick={onBackButtonClick}>\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </BackButton>\r\n        </>\r\n      )}\r\n      <ForecastComponent show={showForecast} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}