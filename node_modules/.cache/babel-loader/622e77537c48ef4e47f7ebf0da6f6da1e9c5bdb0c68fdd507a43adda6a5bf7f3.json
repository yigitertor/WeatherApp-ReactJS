{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\modules\\\\ForecastContainer.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastContainer = ({\n  weather,\n  onBackButtonClick\n}) => {\n  // Tahmin verilerini işle\n  const forecasts = weather === null || weather === void 0 ? void 0 : weather.daily.slice(1, 6); // İlk günü almayı atla ve sonraki 5 günü al\n\n  const handleBackButtonClick = () => {\n    onBackButtonClick(); // Geri dönme butonu tıklandığında ana sayfaya dön\n  };\n  return /*#__PURE__*/_jsxDEV(ForecastWrapper, {\n    children: [forecasts.map((forecast, index) => /*#__PURE__*/_jsxDEV(ForecastCard, {\n      children: [/*#__PURE__*/_jsxDEV(Day, {\n        children: getDayOfWeek(forecast.dt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n        src: getWeatherIcon(forecast.weather[0].icon)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Temperature, {\n        children: `${Math.round(forecast.temp.day)}°C`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(BackButton, {\n      onClick: handleBackButtonClick,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faArrowLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ForecastContainer;\nconst ForecastWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  margin-top: 20px;\n`;\n_c2 = ForecastWrapper;\nconst ForecastCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #1e1e29;\n  border-radius: 10px;\n  padding: 10px;\n  width: 120px;\n  height: 180px;\n`;\n_c3 = ForecastCard;\nconst Day = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 10px;\n`;\n_c4 = Day;\nconst WeatherIcon = styled.img`\n  width: 60px;\n  height: 60px;\n  margin-bottom: 10px;\n`;\n_c5 = WeatherIcon;\nconst Temperature = styled.div`\n  font-size: 16px;\n  color: white;\n`;\n_c6 = Temperature;\nconst BackButton = styled.span`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n  color: white;\n`;\n_c7 = BackButton;\nconst getDayOfWeek = timestamp => {\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const date = new Date(timestamp * 1000);\n  const dayOfWeek = days[date.getDay()];\n  return dayOfWeek;\n};\nconst getWeatherIcon = icon => {\n  return `/icons/${icon}.svg`;\n};\nexport default ForecastContainer;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ForecastContainer\");\n$RefreshReg$(_c2, \"ForecastWrapper\");\n$RefreshReg$(_c3, \"ForecastCard\");\n$RefreshReg$(_c4, \"Day\");\n$RefreshReg$(_c5, \"WeatherIcon\");\n$RefreshReg$(_c6, \"Temperature\");\n$RefreshReg$(_c7, \"BackButton\");","map":{"version":3,"names":["React","styled","FontAwesomeIcon","faArrowLeft","jsxDEV","_jsxDEV","ForecastContainer","weather","onBackButtonClick","forecasts","daily","slice","handleBackButtonClick","ForecastWrapper","children","map","forecast","index","ForecastCard","Day","getDayOfWeek","dt","fileName","_jsxFileName","lineNumber","columnNumber","WeatherIcon","src","getWeatherIcon","icon","Temperature","Math","round","temp","day","BackButton","onClick","_c","div","_c2","_c3","_c4","img","_c5","_c6","span","_c7","timestamp","days","date","Date","dayOfWeek","getDay","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masaüstü/Doc/Projeler/WeatherApp-ReactJS/src/modules/ForecastContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ForecastContainer = ({ weather, onBackButtonClick }) => {\r\n  // Tahmin verilerini işle\r\n  const forecasts = weather?.daily.slice(1, 6); // İlk günü almayı atla ve sonraki 5 günü al\r\n\r\n  const handleBackButtonClick = () => {\r\n    onBackButtonClick(); // Geri dönme butonu tıklandığında ana sayfaya dön\r\n  };\r\n\r\n  return (\r\n    <ForecastWrapper>\r\n      {forecasts.map((forecast, index) => (\r\n        <ForecastCard key={index}>\r\n          <Day>{getDayOfWeek(forecast.dt)}</Day>\r\n          <WeatherIcon src={getWeatherIcon(forecast.weather[0].icon)} />\r\n          <Temperature>{`${Math.round(forecast.temp.day)}°C`}</Temperature>\r\n        </ForecastCard>\r\n      ))}\r\n      <BackButton onClick={handleBackButtonClick}>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n      </BackButton>\r\n    </ForecastWrapper>\r\n  );\r\n};\r\n\r\nconst ForecastWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ForecastCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #1e1e29;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  width: 120px;\r\n  height: 180px;\r\n`;\r\n\r\nconst Day = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: white;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst WeatherIcon = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Temperature = styled.div`\r\n  font-size: 16px;\r\n  color: white;\r\n`;\r\n\r\nconst BackButton = styled.span`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  cursor: pointer;\r\n  color: white;\r\n`;\r\n\r\nconst getDayOfWeek = (timestamp) => {\r\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  const date = new Date(timestamp * 1000);\r\n  const dayOfWeek = days[date.getDay()];\r\n  return dayOfWeek;\r\n};\r\n\r\nconst getWeatherIcon = (icon) => {\r\n  return `/icons/${icon}.svg`;\r\n};\r\n\r\nexport default ForecastContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}