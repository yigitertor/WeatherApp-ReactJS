{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\nimport ForecastPage from \"./modules/ForecastPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherIcons = {\n  \"01d\": \"/icons/sunny.svg\",\n  \"01n\": \"/icons/night.svg\",\n  \"02d\": \"/icons/day.svg\",\n  \"02n\": \"/icons/cloudy-night.svg\",\n  \"03d\": \"/icons/cloudy.svg\",\n  \"03n\": \"/icons/cloudy.svg\",\n  \"04d\": \"/icons/perfect-day.svg\",\n  \"04n\": \"/icons/cloudy-night.svg\",\n  \"09d\": \"/icons/rain.svg\",\n  \"09n\": \"/icons/rain-night.svg\",\n  \"10d\": \"/icons/rain.svg\",\n  \"10n\": \"/icons/rain-night.svg\",\n  \"11d\": \"/icons/storm.svg\",\n  \"11n\": \"/icons/storm.svg\"\n};\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  height: 620px; //820px on figma\n  padding: 10px 10px 30px;\n  margin: auto;\n  border-radius: 10px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: #13131a;\n`;\n_c = Container;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\n// App.js\n\nfunction App() {\n  _s();\n  const [weather, updateWeather] = useState();\n  const [showCityComponent, setShowCityComponent] = useState(true); // Ana arama ekranını göstermek için durum\n  const [showForecastPage, setShowForecastPage] = useState(false); // Tahmin sayfasını göstermek için durum\n\n  const fetchWeatherByLocation = async city => {\n    try {\n      const response = await Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=8297725875f39e37ed6a7bc2e1fc738c`);\n      updateWeather(response.data);\n      setShowCityComponent(false); // Hava durumu bilgilerini aldığımızda ana arama ekranını gizle\n    } catch (error) {\n      console.error(\"Hava durumu bilgisini alırken bir hata oluştu:\", error);\n    }\n  };\n  const handleForecastClick = () => {\n    setShowForecastPage(true);\n  };\n  const handleBackButtonClick = () => {\n    updateWeather(null);\n    setShowCityComponent(true); // Geri tuşuna basıldığında ana arama ekranını yeniden göster\n    setShowForecastPage(false); // Geri tuşuna basıldığında tahmin sayfasını gizle\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [showCityComponent && !showForecastPage && /*#__PURE__*/_jsxDEV(CityComponent, {\n      fetchWeather: fetchWeatherByLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), !showCityComponent && !showForecastPage && /*#__PURE__*/_jsxDEV(WeatherComponent, {\n      weather: weather,\n      onBackButtonClick: handleBackButtonClick,\n      onForecastClick: handleForecastClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), showForecastPage && /*#__PURE__*/_jsxDEV(ForecastPage, {\n      city: weather.name,\n      country: weather.sys.country,\n      onCloseClick: handleBackButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N88khcy3jsfwytuVoH95cmBlu0E=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","styled","Axios","CityComponent","WeatherComponent","ForecastPage","jsxDEV","_jsxDEV","WeatherIcons","Container","div","_c","CloseButton","span","App","_s","weather","updateWeather","showCityComponent","setShowCityComponent","showForecastPage","setShowForecastPage","fetchWeatherByLocation","city","response","get","data","error","console","handleForecastClick","handleBackButtonClick","children","fetchWeather","fileName","_jsxFileName","lineNumber","columnNumber","onBackButtonClick","onForecastClick","name","country","sys","onCloseClick","_c2","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masaüstü/Doc/Projeler/WeatherApp-ReactJS/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Axios from \"axios\";\r\nimport CityComponent from \"./modules/CityComponent\";\r\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\r\nimport ForecastPage from \"./modules/ForecastPage\";\r\n\r\nexport const WeatherIcons = {\r\n  \"01d\": \"/icons/sunny.svg\",\r\n  \"01n\": \"/icons/night.svg\",\r\n  \"02d\": \"/icons/day.svg\",\r\n  \"02n\": \"/icons/cloudy-night.svg\",\r\n  \"03d\": \"/icons/cloudy.svg\",\r\n  \"03n\": \"/icons/cloudy.svg\",\r\n  \"04d\": \"/icons/perfect-day.svg\",\r\n  \"04n\": \"/icons/cloudy-night.svg\",\r\n  \"09d\": \"/icons/rain.svg\",\r\n  \"09n\": \"/icons/rain-night.svg\",\r\n  \"10d\": \"/icons/rain.svg\",\r\n  \"10n\": \"/icons/rain-night.svg\",\r\n  \"11d\": \"/icons/storm.svg\",\r\n  \"11n\": \"/icons/storm.svg\",\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 380px;\r\n  height: 620px; //820px on figma\r\n  padding: 10px 10px 30px;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n  background: #13131a;\r\n`;\r\n\r\nconst CloseButton = styled.span`\r\n  padding: 2px 3px;\r\n  background-color: black;\r\n  border-radius: 50%;\r\n  color: white;\r\n  position: absolute;\r\n`;\r\n\r\n// App.js\r\n\r\nfunction App() {\r\n  const [weather, updateWeather] = useState();\r\n  const [showCityComponent, setShowCityComponent] = useState(true); // Ana arama ekranını göstermek için durum\r\n  const [showForecastPage, setShowForecastPage] = useState(false); // Tahmin sayfasını göstermek için durum\r\n\r\n  const fetchWeatherByLocation = async (city) => {\r\n    try {\r\n      const response = await Axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=8297725875f39e37ed6a7bc2e1fc738c`\r\n      );\r\n      updateWeather(response.data);\r\n      setShowCityComponent(false); // Hava durumu bilgilerini aldığımızda ana arama ekranını gizle\r\n    } catch (error) {\r\n      console.error(\"Hava durumu bilgisini alırken bir hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n  const handleForecastClick = () => {\r\n    setShowForecastPage(true);\r\n  };\r\n\r\n  const handleBackButtonClick = () => {\r\n    updateWeather(null);\r\n    setShowCityComponent(true); // Geri tuşuna basıldığında ana arama ekranını yeniden göster\r\n    setShowForecastPage(false); // Geri tuşuna basıldığında tahmin sayfasını gizle\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {showCityComponent && !showForecastPage && (\r\n        <CityComponent fetchWeather={fetchWeatherByLocation} />\r\n      )}\r\n\r\n      {!showCityComponent && !showForecastPage && (\r\n        <WeatherComponent\r\n          weather={weather}\r\n          onBackButtonClick={handleBackButtonClick}\r\n          onForecastClick={handleForecastClick}\r\n        />\r\n      )}\r\n\r\n      {showForecastPage && (\r\n        <ForecastPage\r\n          city={weather.name}\r\n          country={weather.sys.country}\r\n          onCloseClick={handleBackButtonClick}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}