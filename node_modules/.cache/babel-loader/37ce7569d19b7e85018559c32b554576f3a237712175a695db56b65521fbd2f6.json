{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\modules\\\\ForecastContainer.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastContainer = ({\n  weather\n}) => {\n  _s();\n  const [forecast, setForecast] = React.useState(null);\n  const fetchForecast = async () => {\n    try {\n      const response = await Axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${weather.name}&appid=YOUR_API_KEY&units=metric`);\n      setForecast(response.data);\n    } catch (error) {\n      console.error(\"Hava durumu tahminlerini alırken bir hata oluştu:\", error);\n    }\n  };\n  React.useEffect(() => {\n    fetchForecast();\n  }, [weather]);\n  if (!forecast) return null;\n\n  // Tahminleri gün bazında gruplayalım\n  const groupedForecasts = {};\n  forecast.list.forEach(item => {\n    const date = new Date(item.dt_txt).toLocaleDateString(undefined, {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\"\n    }); // Tarih ve haftanın gününü al\n    if (!groupedForecasts[date]) {\n      groupedForecasts[date] = {\n        date: date,\n        temps: [],\n        icon: item.weather[0].icon,\n        description: item.weather[0].description\n      };\n    }\n    groupedForecasts[date].temps.push(item.main.temp);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 G\\xFCnl\\xFCk Hava Tahmini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\"\n      },\n      children: Object.values(groupedForecasts).map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${forecast.icon}.png`,\n          alt: forecast.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: forecast.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${Math.round(forecast.temps.reduce((acc, temp) => acc + temp, 0) / forecast.temps.length)}°C`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastContainer, \"xlTKpFGEDY72AHUcnH/1pPBQUkI=\");\n_c = ForecastContainer;\nexport default ForecastContainer;\nvar _c;\n$RefreshReg$(_c, \"ForecastContainer\");","map":{"version":3,"names":["React","Axios","jsxDEV","_jsxDEV","ForecastContainer","weather","_s","forecast","setForecast","useState","fetchForecast","response","get","name","data","error","console","useEffect","groupedForecasts","list","forEach","item","date","Date","dt_txt","toLocaleDateString","undefined","weekday","month","day","temps","icon","description","push","main","temp","style","display","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","Object","values","map","index","alignItems","src","alt","Math","round","reduce","acc","length","_c","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masaüstü/Doc/Projeler/WeatherApp-ReactJS/src/modules/ForecastContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst ForecastContainer = ({ weather }) => {\r\n  const [forecast, setForecast] = React.useState(null);\r\n\r\n  const fetchForecast = async () => {\r\n    try {\r\n      const response = await Axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${weather.name}&appid=YOUR_API_KEY&units=metric`\r\n      );\r\n      setForecast(response.data);\r\n    } catch (error) {\r\n      console.error(\"Hava durumu tahminlerini alırken bir hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchForecast();\r\n  }, [weather]);\r\n\r\n  if (!forecast) return null;\r\n\r\n  // Tahminleri gün bazında gruplayalım\r\n  const groupedForecasts = {};\r\n  forecast.list.forEach((item) => {\r\n    const date = new Date(item.dt_txt).toLocaleDateString(undefined, {\r\n      weekday: \"long\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    }); // Tarih ve haftanın gününü al\r\n    if (!groupedForecasts[date]) {\r\n      groupedForecasts[date] = {\r\n        date: date,\r\n        temps: [],\r\n        icon: item.weather[0].icon,\r\n        description: item.weather[0].description,\r\n      };\r\n    }\r\n    groupedForecasts[date].temps.push(item.main.temp);\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <h2>5 Günlük Hava Tahmini</h2>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\r\n        {Object.values(groupedForecasts).map((forecast, index) => (\r\n          <div\r\n            key={index}\r\n            style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}\r\n          >\r\n            <img\r\n              src={`https://openweathermap.org/img/wn/${forecast.icon}.png`}\r\n              alt={forecast.description}\r\n            />\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"5px\" }}\r\n            >\r\n              <span>{forecast.date}</span>\r\n              <span>{`${Math.round(\r\n                forecast.temps.reduce((acc, temp) => acc + temp, 0) /\r\n                  forecast.temps.length\r\n              )}°C`}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}