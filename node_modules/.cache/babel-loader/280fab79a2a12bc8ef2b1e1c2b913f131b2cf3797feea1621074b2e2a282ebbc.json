{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\modules\\\\ForecastPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = ForecastContainer;\nconst ForecastPage = ({\n  city,\n  country,\n  onCloseClick\n}) => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  useEffect(() => {\n    const fetchForecastData = async () => {\n      try {\n        const response = await Axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=YOUR_API_KEY&units=metric`);\n        setForecastData(response.data.list);\n      } catch (error) {\n        console.error(\"Forecast data could not be fetched:\", error);\n      }\n    };\n    fetchForecastData();\n  }, [city, country]);\n  return /*#__PURE__*/_jsxDEV(ForecastContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"5 Day Forecast for \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCloseClick,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecastData.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [forecast.dt_txt, \": \", forecast.weather[0].description, \" -\", \" \", forecast.main.temp, \"\\xB0C\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastPage, \"ICMKhofs5jc8xe0gv6oPHbIvfl4=\");\n_c2 = ForecastPage;\nexport default ForecastPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ForecastContainer\");\n$RefreshReg$(_c2, \"ForecastPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","Axios","jsxDEV","_jsxDEV","ForecastContainer","div","_c","ForecastPage","city","country","onCloseClick","_s","forecastData","setForecastData","fetchForecastData","response","get","data","list","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","forecast","index","dt_txt","weather","description","main","temp","_c2","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masaüstü/Doc/Projeler/WeatherApp-ReactJS/src/modules/ForecastPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Axios from \"axios\";\r\n\r\nconst ForecastContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ForecastPage = ({ city, country, onCloseClick }) => {\r\n  const [forecastData, setForecastData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchForecastData = async () => {\r\n      try {\r\n        const response = await Axios.get(\r\n          `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=YOUR_API_KEY&units=metric`\r\n        );\r\n        setForecastData(response.data.list);\r\n      } catch (error) {\r\n        console.error(\"Forecast data could not be fetched:\", error);\r\n      }\r\n    };\r\n\r\n    fetchForecastData();\r\n  }, [city, country]);\r\n\r\n  return (\r\n    <ForecastContainer>\r\n      <h2>5 Day Forecast for {city}</h2>\r\n      <button onClick={onCloseClick}>Close</button>\r\n      <ul>\r\n        {forecastData.map((forecast, index) => (\r\n          <li key={index}>\r\n            {forecast.dt_txt}: {forecast.weather[0].description} -{\" \"}\r\n            {forecast.main.temp}°C\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </ForecastContainer>\r\n  );\r\n};\r\n\r\nexport default ForecastPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAI;AACrC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,iBAAiB;AAMvB,MAAMG,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMe,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC7B,sDAAqDR,IAAK,IAAGC,OAAQ,kCACxE,CAAC;QACDI,eAAe,CAACE,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAEDL,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACN,IAAI,EAAEC,OAAO,CAAC,CAAC;EAEnB,oBACEN,OAAA,CAACC,iBAAiB;IAAAiB,QAAA,gBAChBlB,OAAA;MAAAkB,QAAA,GAAI,qBAAmB,EAACb,IAAI;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClCtB,OAAA;MAAQuB,OAAO,EAAEhB,YAAa;MAAAW,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7CtB,OAAA;MAAAkB,QAAA,EACGT,YAAY,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChC1B,OAAA;QAAAkB,QAAA,GACGO,QAAQ,CAACE,MAAM,EAAC,IAAE,EAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,EAAC,IAAE,EAAC,GAAG,EACzDJ,QAAQ,CAACK,IAAI,CAACC,IAAI,EAAC,OACtB;MAAA,GAHSL,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAExB,CAAC;AAACd,EAAA,CAhCIJ,YAAY;AAAA4B,GAAA,GAAZ5B,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}