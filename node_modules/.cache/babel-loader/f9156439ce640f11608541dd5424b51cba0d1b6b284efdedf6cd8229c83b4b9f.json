{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\modules\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastButton = styled.button`\n  background-color: #7692c9;\n  font-size: 14px;\n  padding: 0 10px;\n  color: white;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 8px;\n  margin-left: 3px;\n  margin-right: 3px;\n`;\nconst WeatherForecast = ({\n  city\n}) => {\n  _s();\n  const [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    const fetchForecast = async () => {\n      try {\n        const response = await Axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=8297725875f39e37ed6a7bc2e1fc738c`);\n        setForecast(response.data);\n      } catch (error) {\n        console.error(\"Forecast data fetch error:\", error);\n      }\n    };\n    if (city) {\n      fetchForecast();\n    }\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather Forecast for \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(forecast, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForecast, \"xlTKpFGEDY72AHUcnH/1pPBQUkI=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","Axios","styled","jsxDEV","_jsxDEV","ForecastButton","button","WeatherForecast","city","_s","forecast","setForecast","fetchForecast","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masaüstü/Doc/Projeler/WeatherApp-ReactJS/src/modules/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ForecastButton = styled.button`\r\n  background-color: #7692c9;\r\n  font-size: 14px;\r\n  padding: 0 10px;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n  margin-left: 3px;\r\n  margin-right: 3px;\r\n`;\r\n\r\nconst WeatherForecast = ({ city }) => {\r\n  const [forecast, setForecast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchForecast = async () => {\r\n      try {\r\n        const response = await Axios.get(\r\n          `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=8297725875f39e37ed6a7bc2e1fc738c`\r\n        );\r\n        setForecast(response.data);\r\n      } catch (error) {\r\n        console.error(\"Forecast data fetch error:\", error);\r\n      }\r\n    };\r\n\r\n    if (city) {\r\n      fetchForecast();\r\n    }\r\n  }, [city]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Forecast for {city}</h2>\r\n      {forecast && (\r\n        <div>\r\n          {/* Display forecast data here */}\r\n          <pre>{JSON.stringify(forecast, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,sDAAqDN,IAAK,yCAC7D,CAAC;QACDG,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,IAAIR,IAAI,EAAE;MACRI,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,GAAI,uBAAqB,EAACV,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnCZ,QAAQ,iBACPN,OAAA;MAAAc,QAAA,eAEEd,OAAA;QAAAc,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACd,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA/BIF,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AAiCrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}