{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\modules\\\\ForecastComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"Y8297725875f39e37ed6a7bc2e1fc738c\"; // Replace with your OpenWeatherMap API key\nconst apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=YOUR_CITY_NAME&appid=${apiKey}`;\nconst ForecastContainer = styled.div`\n  display: ${({\n  show\n}) => show ? \"block\" : \"none\"};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  border-radius: 10px;\n`;\n_c = ForecastContainer;\nconst ForecastItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n\n  & img {\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n  }\n\n  & span {\n    color: #fff;\n    font-size: 16px;\n  }\n`;\n_c2 = ForecastItem;\nconst ForecastComponent = ({\n  show\n}) => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  useEffect(() => {\n    const fetchForecast = async () => {\n      try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch forecast data\");\n        }\n        const data = await response.json();\n        const formattedData = formatForecastData(data);\n        setForecastData(formattedData);\n      } catch (error) {\n        console.error(\"Error fetching forecast data:\", error);\n      }\n    };\n    fetchForecast();\n  }, []);\n  const formatForecastData = data => {\n    // Format the data as needed\n    // For example, extract relevant information like day, icon, and temperature\n    return data.list.map(item => ({\n      day: item.dt_txt,\n      // Assuming dt_txt contains date and time in string format\n      icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n      temperature: `${Math.round(item.main.temp - 273.15)}째C` // Convert temperature to Celsius\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(ForecastContainer, {\n    show: show,\n    children: forecastData.map((forecast, index) => /*#__PURE__*/_jsxDEV(ForecastItem, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: forecast.icon,\n        alt: forecast.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${forecast.day}: ${forecast.temperature}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastComponent, \"ICMKhofs5jc8xe0gv6oPHbIvfl4=\");\n_c3 = ForecastComponent;\nexport default ForecastComponent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ForecastContainer\");\n$RefreshReg$(_c2, \"ForecastItem\");\n$RefreshReg$(_c3, \"ForecastComponent\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","apiKey","apiUrl","ForecastContainer","div","show","_c","ForecastItem","_c2","ForecastComponent","_s","forecastData","setForecastData","fetchForecast","response","fetch","ok","Error","data","json","formattedData","formatForecastData","error","console","list","map","item","day","dt_txt","icon","weather","temperature","Math","round","main","temp","children","forecast","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masa체st체/Doc/Projeler/WeatherApp-ReactJS/src/modules/ForecastComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst apiKey = \"Y8297725875f39e37ed6a7bc2e1fc738c\"; // Replace with your OpenWeatherMap API key\r\nconst apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=YOUR_CITY_NAME&appid=${apiKey}`;\r\n\r\nconst ForecastContainer = styled.div`\r\n  display: ${({ show }) => (show ? \"block\" : \"none\")};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst ForecastItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n\r\n  & img {\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  & span {\r\n    color: #fff;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ForecastComponent = ({ show }) => {\r\n  const [forecastData, setForecastData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchForecast = async () => {\r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch forecast data\");\r\n        }\r\n        const data = await response.json();\r\n        const formattedData = formatForecastData(data);\r\n        setForecastData(formattedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching forecast data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchForecast();\r\n  }, []);\r\n\r\n  const formatForecastData = (data) => {\r\n    // Format the data as needed\r\n    // For example, extract relevant information like day, icon, and temperature\r\n    return data.list.map((item) => ({\r\n      day: item.dt_txt, // Assuming dt_txt contains date and time in string format\r\n      icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\r\n      temperature: `${Math.round(item.main.temp - 273.15)}째C`, // Convert temperature to Celsius\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <ForecastContainer show={show}>\r\n      {forecastData.map((forecast, index) => (\r\n        <ForecastItem key={index}>\r\n          <img src={forecast.icon} alt={forecast.day} />\r\n          <span>{`${forecast.day}: ${forecast.temperature}`}</span>\r\n        </ForecastItem>\r\n      ))}\r\n    </ForecastContainer>\r\n  );\r\n};\r\n\r\nexport default ForecastComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}