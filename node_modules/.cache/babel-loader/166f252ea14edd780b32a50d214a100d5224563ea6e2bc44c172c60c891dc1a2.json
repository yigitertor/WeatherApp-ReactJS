{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\Doc\\\\Projeler\\\\WeatherApp-ReactJS\\\\src\\\\modules\\\\ForecastContainer.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastContainer = ({\n  weather\n}) => {\n  _s();\n  const [forecast, setForecast] = React.useState(null);\n  const fetchForecast = async () => {\n    try {\n      const response = await Axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${weather.name}&appid=8297725875f39e37ed6a7bc2e1fc738c&units=metric`);\n      setForecast(response.data);\n    } catch (error) {\n      console.error(\"Hava durumu tahminlerini alırken bir hata oluştu:\", error);\n    }\n  };\n  React.useEffect(() => {\n    fetchForecast();\n  }, [weather]);\n  if (!forecast) return null;\n\n  // Tahminleri gün bazında gruplayalım\n  const groupedForecasts = {};\n  forecast.list.forEach(item => {\n    const date = item.dt_txt.split(\" \")[0]; // Tarihi al\n    if (!groupedForecasts[date]) {\n      groupedForecasts[date] = {\n        date: date,\n        temps: [],\n        icon: item.weather[0].icon,\n        description: item.weather[0].description\n      };\n    }\n    groupedForecasts[date].temps.push(item.main.temp);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5 G\\xFCnl\\xFCk Hava Tahmini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), Object.values(groupedForecasts).map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: forecast.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${forecast.icon}.png`,\n        alt: forecast.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${Math.round(forecast.temps.reduce((acc, temp) => acc + temp, 0) / forecast.temps.length)}°C`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastContainer, \"xlTKpFGEDY72AHUcnH/1pPBQUkI=\");\n_c = ForecastContainer;\nexport default ForecastContainer;\nvar _c;\n$RefreshReg$(_c, \"ForecastContainer\");","map":{"version":3,"names":["React","Axios","jsxDEV","_jsxDEV","ForecastContainer","weather","_s","forecast","setForecast","useState","fetchForecast","response","get","name","data","error","console","useEffect","groupedForecasts","list","forEach","item","date","dt_txt","split","temps","icon","description","push","main","temp","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","index","src","alt","Math","round","reduce","acc","length","_c","$RefreshReg$"],"sources":["C:/Users/yigit/OneDrive/Masaüstü/Doc/Projeler/WeatherApp-ReactJS/src/modules/ForecastContainer.js"],"sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst ForecastContainer = ({ weather }) => {\r\n  const [forecast, setForecast] = React.useState(null);\r\n\r\n  const fetchForecast = async () => {\r\n    try {\r\n      const response = await Axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${weather.name}&appid=8297725875f39e37ed6a7bc2e1fc738c&units=metric`\r\n      );\r\n      setForecast(response.data);\r\n    } catch (error) {\r\n      console.error(\"Hava durumu tahminlerini alırken bir hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchForecast();\r\n  }, [weather]);\r\n\r\n  if (!forecast) return null;\r\n\r\n  // Tahminleri gün bazında gruplayalım\r\n  const groupedForecasts = {};\r\n  forecast.list.forEach((item) => {\r\n    const date = item.dt_txt.split(\" \")[0]; // Tarihi al\r\n    if (!groupedForecasts[date]) {\r\n      groupedForecasts[date] = {\r\n        date: date,\r\n        temps: [],\r\n        icon: item.weather[0].icon,\r\n        description: item.weather[0].description,\r\n      };\r\n    }\r\n    groupedForecasts[date].temps.push(item.main.temp);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>5 Günlük Hava Tahmini</h2>\r\n      {Object.values(groupedForecasts).map((forecast, index) => (\r\n        <div key={index}>\r\n          <span>{forecast.date}</span>\r\n          <img\r\n            src={`https://openweathermap.org/img/wn/${forecast.icon}.png`}\r\n            alt={forecast.description}\r\n          />\r\n          <span>{`${Math.round(\r\n            forecast.temps.reduce((acc, temp) => acc + temp, 0) /\r\n              forecast.temps.length\r\n          )}°C`}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC7B,sDAAqDP,OAAO,CAACQ,IAAK,sDACrE,CAAC;MACDL,WAAW,CAACG,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;IAC3E;EACF,CAAC;EAEDf,KAAK,CAACiB,SAAS,CAAC,MAAM;IACpBP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,IAAI,CAACE,QAAQ,EAAE,OAAO,IAAI;;EAE1B;EACA,MAAMW,gBAAgB,GAAG,CAAC,CAAC;EAC3BX,QAAQ,CAACY,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;IAC9B,MAAMC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,IAAI,CAACN,gBAAgB,CAACI,IAAI,CAAC,EAAE;MAC3BJ,gBAAgB,CAACI,IAAI,CAAC,GAAG;QACvBA,IAAI,EAAEA,IAAI;QACVG,KAAK,EAAE,EAAE;QACTC,IAAI,EAAEL,IAAI,CAAChB,OAAO,CAAC,CAAC,CAAC,CAACqB,IAAI;QAC1BC,WAAW,EAAEN,IAAI,CAAChB,OAAO,CAAC,CAAC,CAAC,CAACsB;MAC/B,CAAC;IACH;IACAT,gBAAgB,CAACI,IAAI,CAAC,CAACG,KAAK,CAACG,IAAI,CAACP,IAAI,CAACQ,IAAI,CAACC,IAAI,CAAC;EACnD,CAAC,CAAC;EAEF,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BC,MAAM,CAACC,MAAM,CAACnB,gBAAgB,CAAC,CAACoB,GAAG,CAAC,CAAC/B,QAAQ,EAAEgC,KAAK,kBACnDpC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,EAAOxB,QAAQ,CAACe;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BhC,OAAA;QACEqC,GAAG,EAAG,qCAAoCjC,QAAQ,CAACmB,IAAK,MAAM;QAC9De,GAAG,EAAElC,QAAQ,CAACoB;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFhC,OAAA;QAAA4B,QAAA,EAAQ,GAAEW,IAAI,CAACC,KAAK,CAClBpC,QAAQ,CAACkB,KAAK,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEf,IAAI,KAAKe,GAAG,GAAGf,IAAI,EAAE,CAAC,CAAC,GACjDvB,QAAQ,CAACkB,KAAK,CAACqB,MACnB,CAAE;MAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GATLI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CArDIF,iBAAiB;AAAA2C,EAAA,GAAjB3C,iBAAiB;AAuDvB,eAAeA,iBAAiB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}